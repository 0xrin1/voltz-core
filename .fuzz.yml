# .fuzz_voltz.yml

fuzz:
    # Tell the CLI where to find the compiled contracts and compilation artifacts
    build_directory: artifacts/contracts
    
    # The following address is going to be the main target for the fuzzing campaign
    deployed_contract_address: "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab"
    
    # We'll do fuzzing with 32 cores ðŸš€
    number_of_cores: 8

    # env variable or CLI option to pass the key or global fuzzing config for the machine
    key: "MXczMzBnN1NUVFJmRU5PUTh0QUlwT0s4S005d2ZnWmY6OmRpbGlnZW5jZS51cy5hdXRoMC5jb20=::v1.MTkFnezibgD8_XJ2swHrH21tS_fQfvOdCoHQExEyca4F6lsOkSRGKKX9oUVPLj8ntaRvKXERNDAD08QiizKhMPY"
    
    # When the campaign is created it'll get a name <prefix>_<random_characters>
    campaign_name_prefix: "Voltz campaign"
    
    # Point to your ganache node which holds the seed ðŸŒ±
    rpc_url: "http://localhost:8545" # ganache instance
    faas_url: "http://fuzzing.diligence.tools" # never need to change (only for staging env)
    

    # This is the contract that the campaign will show coverage for/ map issues to etc
    # It's a list of all the relevant contracts (don't worry about dependencies, we'll get those automatically ðŸ™Œ)
    targets:
        # - "/Users/arturbegyan/Desktop/scribble-exercise-1/contracts/vulnerableERC20.sol"
        - "contracts/VAMM.sol"